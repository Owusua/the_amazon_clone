{"ast":null,"code":"import _toConsumableArray from\"/home/owusua/Music/amazon_clone/briod_amazonclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/owusua/Music/amazon_clone/briod_amazonclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";//this is the store which is represent by a basket, which is an empty array\nexport var initialState={basket:[],user:null};export var getBasketTotal=function getBasketTotal(basket){return basket===null||basket===void 0?void 0:basket.reduce(function(amount,item){return item.price+amount;},0);};var reducer=function reducer(state,action){console.log(action);//for debugging the basket\nswitch(action.type){case\"SET_USER\":return _objectSpread(_objectSpread({},state),{},{user:action.user});case\"ADD_TO_BASKET\"://logic for adding item to basket\nreturn _objectSpread(_objectSpread({},state),{},{basket:[].concat(_toConsumableArray(state.basket),[action.item])});case\"REMOVE_FROM_BASKET\"://logic for Removing item from basket...\n//we cloned the basket\nvar newBasket=_toConsumableArray(state.basket);//found index of the item we were looking for\nvar index=state.basket.findIndex(function(basketItem){return basketItem.id===action.id;});if(index>=0){//item exist in basket, remove it...\nnewBasket.splice(index,1);}else{console.warn(\"Cant remove product (id: \".concat(action.id,\") as its not in basket\"));}return _objectSpread(_objectSpread({},state),{},{basket:newBasket});default:return state;}};export default reducer;","map":{"version":3,"sources":["/home/owusua/Music/amazon_clone/briod_amazonclone/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","newBasket","index","findIndex","basketItem","id","splice","warn"],"mappings":"uVAAA;AACA,MAAO,IAAMA,CAAAA,YAAY,CAAG,CAC1BC,MAAM,CAAE,EADkB,CAE1BC,IAAI,CAAE,IAFoB,CAArB,CAKP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,MAAD,QAC5BA,CAAAA,MAD4B,SAC5BA,MAD4B,iBAC5BA,MAAM,CAAEG,MAAR,CAAe,SAACC,MAAD,CAASC,IAAT,QAAkBA,CAAAA,IAAI,CAACC,KAAL,CAAaF,MAA/B,EAAf,CAAsD,CAAtD,CAD4B,EAAvB,CAGP,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACjCC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAqB;AACrB,OAAQA,MAAM,CAACG,IAAf,EACE,IAAK,UAAL,CACE,sCACKJ,KADL,MAEEP,IAAI,CAAEQ,MAAM,CAACR,IAFf,GAIF,IAAK,eAAL,CACE;AACA,sCAEKO,KAFL,MAGER,MAAM,8BAAMQ,KAAK,CAACR,MAAZ,GAAoBS,MAAM,CAACJ,IAA3B,EAHR,GAMF,IAAK,oBAAL,CACE;AAEA;AACA,GAAIQ,CAAAA,SAAS,oBAAOL,KAAK,CAACR,MAAb,CAAb,CAEA;AACA,GAAMc,CAAAA,KAAK,CAAGN,KAAK,CAACR,MAAN,CAAae,SAAb,CACZ,SAACC,UAAD,QAAgBA,CAAAA,UAAU,CAACC,EAAX,GAAkBR,MAAM,CAACQ,EAAzC,EADY,CAAd,CAIA,GAAIH,KAAK,EAAI,CAAb,CAAgB,CACd;AACAD,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,CAAwB,CAAxB,EACD,CAHD,IAGO,CACLJ,OAAO,CAACS,IAAR,oCAC8BV,MAAM,CAACQ,EADrC,4BAGD,CAED,sCAAYT,KAAZ,MAAmBR,MAAM,CAAEa,SAA3B,GAEF,QACE,MAAOL,CAAAA,KAAP,CArCJ,CAuCD,CAzCD,CA2CA,cAAeD,CAAAA,OAAf","sourcesContent":["//this is the store which is represent by a basket, which is an empty array\nexport const initialState = {\n  basket: [],\n  user: null,\n};\n\nexport const getBasketTotal = (basket) =>\n  basket?.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action); //for debugging the basket\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n    case \"ADD_TO_BASKET\":\n      //logic for adding item to basket\n      return {\n        //return the current state but changing the basket and and returning whatever is in the basket was plus whatever item you just added\n        ...state,\n        basket: [...state.basket, action.item],\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      //logic for Removing item from basket...\n\n      //we cloned the basket\n      let newBasket = [...state.basket];\n\n      //found index of the item we were looking for\n      const index = state.basket.findIndex(\n        (basketItem) => basketItem.id === action.id\n      );\n\n      if (index >= 0) {\n        //item exist in basket, remove it...\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\n          `Cant remove product (id: ${action.id}) as its not in basket`\n        );\n      }\n\n      return { ...state, basket: newBasket };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"//this is the store which is represent by a basket, which is an empty array\nexport const initialState = {\n  basket: [],\n  user: null\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action); //for debugging the basket\n\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    case \"ADD_TO_BASKET\":\n      //logic for adding item to basket\n      return { //return the current state but changing the basket and and returning whatever is in the basket was plus whatever item you just added\n        ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      //logic for Removing item from basket...\n      //we cloned the basket\n      let newBasket = [...state.basket]; //found index of the item we were looking for\n\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        //item exist in basket, remove it...\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as its not in basket`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/owusua/Music/amazon_clone/briod_amazonclone/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","newBasket","index","findIndex","basketItem","id","splice","warn"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;AAKP,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADiC,CACZ;;AACrB,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELP,QAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFR,OAAP;;AAIF,SAAK,eAAL;AACE;AACA,aAAO,EACL;AACA,WAAGO,KAFE;AAGLR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAHH,OAAP;;AAMF,SAAK,oBAAL;AACE;AAEA;AACA,UAAIQ,SAAS,GAAG,CAAC,GAAGL,KAAK,CAACR,MAAV,CAAhB,CAJF,CAME;;AACA,YAAMc,KAAK,GAAGN,KAAK,CAACR,MAAN,CAAae,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBR,MAAM,CAACQ,EAD7B,CAAd;;AAIA,UAAIH,KAAK,IAAI,CAAb,EAAgB;AACd;AACAD,QAAAA,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;AACD,OAHD,MAGO;AACLJ,QAAAA,OAAO,CAACS,IAAR,CACG,4BAA2BV,MAAM,CAACQ,EAAG,wBADxC;AAGD;;AAED,aAAO,EAAE,GAAGT,KAAL;AAAYR,QAAAA,MAAM,EAAEa;AAApB,OAAP;;AAEF;AACE,aAAOL,KAAP;AArCJ;AAuCD,CAzCD;;AA2CA,eAAeD,OAAf","sourcesContent":["//this is the store which is represent by a basket, which is an empty array\nexport const initialState = {\n  basket: [],\n  user: null,\n};\n\nexport const getBasketTotal = (basket) =>\n  basket?.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action); //for debugging the basket\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n    case \"ADD_TO_BASKET\":\n      //logic for adding item to basket\n      return {\n        //return the current state but changing the basket and and returning whatever is in the basket was plus whatever item you just added\n        ...state,\n        basket: [...state.basket, action.item],\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      //logic for Removing item from basket...\n\n      //we cloned the basket\n      let newBasket = [...state.basket];\n\n      //found index of the item we were looking for\n      const index = state.basket.findIndex(\n        (basketItem) => basketItem.id === action.id\n      );\n\n      if (index >= 0) {\n        //item exist in basket, remove it...\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\n          `Cant remove product (id: ${action.id}) as its not in basket`\n        );\n      }\n\n      return { ...state, basket: newBasket };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}